[tool.poetry]
# https://blog.frank-mich.com/python-poetry-1-0-0-private-repo-issue-fix/
authors = ["Coert van Gemeren <coertvangemeren@gmail.com>"]
description = "Snaketalk"
name = "snaketalk"
readme = "README.md"
version = "0.0.1"

[tool.poetry.dependencies]
black = "*"
coverage = "*"
flake8 = "*"
mypy = "*"
mypy-extensions = "*"
numpy = "*"
opencv-contrib-python = "*"
orjson = "*"
pillow = "*"
python = ">=3.10,<3.13"
types-futures = "*"
types-orjson = "*"
types-python-dateutil = "*"
types-pytz = "*"
types-pyyaml = "*"
types-redis = "*"
types-requests = "*"
types-toml = "*"
typing-extensions = "*"
watchfiles = "*"

[tool.ruff]
# Same as Black.
indent-width = 4
line-length = 100

# Assume Python 3.12
target-version = "py312"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pyright]
exclude = [
    "**/.mypy_cache",
    "**/.pytest_cache",
    "**/__pycache__",
    "**/docker",
    "**/kubernetes",
    "**/lib",
]
include = ["app"]

reportGeneralTypeIssues = false
reportMissingImports = true
reportMissingTypeStubs = false
reportOptionalMemberAccess = false

pythonPlatform = "Linux"
pythonVersion = "3.12"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
